{"version":3,"sources":["components/images/23823171-illustration-of-a-pink-flower-on-a-white-background.jpg","components/Header.js","components/Task.js","components/TasksLeft.js","components/TaskList.js","components/TaskInput.js","components/FlowerImage.js","service/tasks.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","style","styles","header","React","Component","color","backgroundColor","fontSize","fontFamily","textAlign","borderRadius","paddingTop","paddingBottom","Task","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDoneClick","bind","assertThisInitialized","handleDeleteClick","onDoneClicked","task","taskId","onDeleteClicked","className","textDecoration","taskCompleted","taskDescription","type","value","onClick","TasksLeft","build_default","singular","zero","count","tasksLeft","TaskList","onDoneTaskHandler","onDeleteTaskHandler","_this2","components_TasksLeft","tasks","map","i","components_Task","key","TaskInput","state","onSubmitClicked","onTextFieldUpdated","alert","taskToBeAdded","console","log","onSaveTaskHandler","setState","event","description","target","placeholder","onChange","FlowerImage","src","prettyFlower","alt","width","height","imageAlign","Flower","TasksService","getTasks","_getTasks","asyncToGenerator","regenerator_default","mark","_callee","res","data","wrap","_context","prev","next","axios","get","sent","abrupt","stop","apply","arguments","getTasksLeft","_getTasksLeft","_callee2","_context2","saveTask","_saveTask","_callee3","_context3","post","_x","updateTask","_updateTask","_callee4","_context4","put","_x2","deleteTask","_deleteTask","_callee5","_context5","delete","_x3","App","addTask","taskDone","taskDelete","tasksStillLeft","taskCount","response","insertId","concat","toConsumableArray","objectSpread","filter","components_Header","components_FlowerImage","components_TaskInput","components_TaskList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5d3229bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/23823171-illustration-of-a-pink-flower-on-a-white-background.a42e32c4.jpg\";","import React from 'react';\n\nclass Header extends React.Component {\n\n    render() {\n        return (<h1 style={styles.header}>Heather's To Do App</h1>);\n    }\n\n}\n\nconst styles = {\n    header : {\n            color: \"#FFAD4F\",\n            backgroundColor: \"#1E3F63\",\n            fontSize: \"100px\",\n            fontFamily: \"Cormorant Garamond\",\n            textAlign: \"center\",\n            borderRadius: \"30%\",\n            paddingTop : \"30px\",\n            paddingBottom : \"30px\",\n        }\n    };\n\nexport default Header;\n\n// color: #FFAD4F;\n//     background-color: #1E3F63;\n//     font-size: 150px;\n//     font-family: 'Cormorant Garamond', serif;\n//     text-align: center;\n//     borderRadius: 30%;","import React from 'react';\n// import TaskDoneButton from './TaskDoneButton.js'\n\nclass Task extends React.Component {\n    constructor(props) {\n        super(props)\n        this.handleDoneClick=this.handleDoneClick.bind(this);\n        this.handleDeleteClick=this.handleDeleteClick.bind(this);\n    }\n\n    handleDoneClick() {\n        this.props.onDoneClicked(this.props.task.taskId);\n    }\n\n    handleDeleteClick() {\n        this.props.onDeleteClicked(this.props.task.taskId);\n    }\n\n    \n    render() {\n        return (\n            <div>\n                <div className=\"row\" style={styles}>\n                    <div className=\"col-12 col-sm-12 col-md-10 border\" style={{textDecoration: this.props.task.taskCompleted ? \"line-through\" : \"\"}}>\n                        {this.props.task.taskDescription}\n                        </div>\n                    <div className=\"col-6 col-sm-6 col-md-1\" >\n                        <input className=\"btn btn-success\" type=\"submit\" value=\"Done\" onClick={this.handleDoneClick}  />\n                        </div>\n                    <div className=\"col-6 col-sm-6 col-md-1\">\n                        <input className=\"btn btn-primary\" type=\"submit\" value=\"Delete\" onClick={this.handleDeleteClick} />\n                        </div>\n                </div>\n            </div>\n        );\n    }\n\n};\nconst styles = {\n    paddingTop : \"10px\",\n    paddingBottom : \"10px\"\n}\nexport default Task;\n","import React from 'react';\nimport Pluralize from 'react-pluralize';\n\nclass TasksLeft extends React.Component {\n\n    render() {\n\n    // Work out how many of the tasks are left to complete\n        // let tasksRemaining = 0;\n        // for(let task of this.props.tasks) {\n        //     if(task.taskCompleted === false) {\n        //         tasksRemaining++;\n        //     }\n        // };\n    \n        return <h1 styles={styles}>You have <Pluralize singular={'task'} zero={\"no tasks\"} count={this.props.tasksLeft} /> remaining!</h1>\n    }\n}\nconst styles = {\n    paddingTop : \"10px\",\n    paddingBottom : \"10px\",\n    textAlign: \"center\",\n}\nexport default TasksLeft;\n","import React from 'react';\nimport Task from './Task';\nimport TasksLeft from './TasksLeft';\n\nclass TaskList extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.onDoneClicked = this.onDoneClicked.bind(this);\n        this.onDeleteClicked = this.onDeleteClicked.bind(this);\n    }\n    onDoneClicked(taskId) {                        \n        this.props.onDoneTaskHandler(taskId)\n    };\n\n    onDeleteClicked(taskId) {                        \n        this.props.onDeleteTaskHandler(taskId)\n    };\n\n\n    render() {\n    \n        return (\n            <div>\n            <TasksLeft tasksLeft={this.props.tasksLeft}/>\n                {this.props.tasks.map((task, i) => \n            <Task\n            taskId={task.taskId}\n            tasks={this.props.tasks} \n            task={task}\n            key={this.props.taskId}\n            onDoneClicked={this.onDoneClicked}\n            onDeleteClicked={this.onDeleteClicked}\n            />\n                )}\n           </div>\n        );\n    }\n};\n\nexport default TaskList;","import React from 'react';\n\nclass TaskInput extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            taskDescription: \"\"\n        };\n    \n        //Event binding functions\n        this.onSubmitClicked = this.onSubmitClicked.bind(this);\n        this.onTextFieldUpdated = this.onTextFieldUpdated.bind(this);\n    }\n    //Function fires when Submit button clicked\n    onSubmitClicked() {\n        if (this.state.taskDescription === \"\") {\n            alert(\"You need to add a task\")\n        } else {\n        const taskToBeAdded = {\n            // taskId: \"\",\n            taskDescription: this.state.taskDescription,\n            taskCompleted: false\n        }\n        console.log(taskToBeAdded);\n        this.props.onSaveTaskHandler(taskToBeAdded);\n        this.setState({\n            taskDescription: \"\"\n        })\n    }\n}\n\n    // Function fires when the text box is filled\n    onTextFieldUpdated(event) {\n        const description = event.target.value;\n        {this.setState ({\n                taskDescription: description\n        });\n    }\n}\n\n    render() {\n        return (\n                <div className=\"form-group\">\n                  <div className=\"container\">\n                      <div className=\"row\" style={styles}>\n                          <div className=\"col-sm-12 col-md-11\">\n                             <input type=\"text\" value={this.state.taskDescription} className=\"form-control\" placeholder=\"Add your next task here. Keep it SMART!\" onChange={this.onTextFieldUpdated} />\n                          </div>\n                          <div className=\"col-sm-1 col-md-1\">\n                            <button type=\"submit\" className=\"btn btn-primary\" onClick={this.onSubmitClicked} >Submit</button>\n                          </div>\n                      </div>\n                      </div>\n                </div>\n        );\n    }\n\n};\nconst styles = {\n    paddingTop : \"10px\",\n    paddingBottom : \"10px\",\n}\nexport default TaskInput;\n\n//  id=\"taskToAdd\" aria-describedby=\"taskAdd\" className=\"form-control\"","import React from 'react';\nimport Flower from './images/23823171-illustration-of-a-pink-flower-on-a-white-background.jpg';\n\nclass FlowerImage extends React.Component {\n\n    render() {\n        return (\n            <div>\n            <img \n          src={prettyFlower.src}\n          alt={prettyFlower.alt}\n          width={prettyFlower.width}\n          height={prettyFlower.height}\n          imageAlign={prettyFlower.imageAlign}\n        //   styles={styles}\n           />\n            </div>\n        );\n    }\n\n};\n\nconst prettyFlower = {\n    src: Flower,\n    alt: 'PrettyFlower',\n    width:\"295px\",\n    height:\"295px\",\n    paddingTop : \"10px\",\n    paddingBottom : \"10px\",\n    imageAlign: \"center\",\n  };\nexport default FlowerImage;","import axios from 'axios';\n\nconst TasksService = {\n    async getTasks() {\n        let res = await axios.get(\"https://278nggy6rg.execute-api.eu-west-2.amazonaws.com/dev/tasks/\");\n        let data = await res.data;\n        return data;\n    },\n\n    async getTasksLeft() {\n        let res = await axios.get(\"https://278nggy6rg.execute-api.eu-west-2.amazonaws.com/dev/tasks/taskstodo\");\n        let data = await res.data;\n        return data;\n    },\n\n    async saveTask(task){\n        let res = await axios.post(\"https://278nggy6rg.execute-api.eu-west-2.amazonaws.com/dev/tasks/\", task);\n        return res.data;\n    },\n\n    async updateTask(taskId){\n        let res = await axios.put(\"https://278nggy6rg.execute-api.eu-west-2.amazonaws.com/dev/tasks/\" + taskId);\n        return res.data;\n    },\n\n    async deleteTask(taskId){\n        let res = await axios.delete(\"https://278nggy6rg.execute-api.eu-west-2.amazonaws.com/dev/tasks/\" + taskId);\n        return res.data;\n    }\n };\n \n export default TasksService;","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport TaskList from './components/TaskList';\nimport TaskInput from './components/TaskInput';\nimport FlowerImage from './components/FlowerImage';\nimport TasksService from './service/tasks';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tasks: [],\n      tasksLeft: 0\n    };\n\n    this.addTask = this.addTask.bind(this);\n    this.taskDone = this.taskDone.bind(this);\n    this.taskDelete = this.taskDelete.bind(this);\n  }\n\n  async componentDidMount() {\n    const tasks = await TasksService.getTasks();\n    const tasksStillLeft = await TasksService.getTasksLeft();\n    const taskCount = tasksStillLeft[0]['COUNT(*)'];\n    this.setState({ tasksLeft: taskCount });\n    // console.log(tasks);\n    this.setState({ tasks: tasks });\n  }\n\n  async addTask(task) {\n    const tasksStillLeft = await TasksService.getTasksLeft();\n    const taskCount = tasksStillLeft[0]['COUNT(*)'];\n    this.setState({ tasksLeft: taskCount });\n    const response = await TasksService.saveTask(task);\n    // console.log(response);\n    task.taskId = response.insertId;\n\n    this.setState({\n      tasks: [...this.state.tasks, task]\n          })\n  }\n  //I want to iterate through to find the id that matches with the task I want to delete and set the completed status to true\n  //Id needs to come from tasks.id and needs to be drawn from the taskList component\n\n  async taskDone(taskId) {\n    const response = await TasksService.updateTask(taskId);\n    const tasksStillLeft = await TasksService.getTasksLeft();\n    const taskCount = tasksStillLeft[0]['COUNT(*)'];\n    this.setState({ tasksLeft: taskCount });\n    this.setState({\n      tasks: this.state.tasks.map(tasks => {\n        if (tasks.taskId === taskId) {\n          return {\n            ...tasks,\n            taskCompleted: !tasks.taskCompleted\n          }\n        } else {\n          return tasks;\n        }\n      })\n    })\n  }\n\n  async taskDelete(taskId) {\n    const response = await TasksService.deleteTask(taskId);\n    const tasksStillLeft = await TasksService.getTasksLeft();\n    const taskCount = tasksStillLeft[0]['COUNT(*)'];\n    this.setState({ tasksLeft: taskCount });\n    this.setState({\n      tasks: this.state.tasks.filter(tasks => tasks.taskId !== taskId)\n    });\n  };\n\n  // async tasksLeftToDo() {\n  //   const tasksStillLeft = await TasksService.getTasksLeft();\n  //   console.log(tasksStillLeft);\n  //   this.setState({tasksLeft: tasksStillLeft})\n  // };\n\n  render() {\n    return (\n      <div className=\"container\" style={styles}>\n        <div><br></br></div>\n        <div className=\"row\">\n          <div className=\"col-md-12 col-lg-8\">\n            <Header />\n          </div>\n          <div className=\"col-lg-4 d-none d-lg-block\">\n            <FlowerImage />\n          </div>\n        </div>\n        <TaskInput onSaveTaskHandler={this.addTask} />\n        <p>Keep It Simple, Stupid</p>\n        <TaskList\n          tasks={this.state.tasks}\n          tasksLeft={this.state.tasksLeft}\n          onDoneTaskHandler={this.taskDone}\n          onDeleteTaskHandler={this.taskDelete}\n        />\n      </div>\n    );\n  }\n}\nconst styles = {\n  backgroundColor: \"#81E4BD\"\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}